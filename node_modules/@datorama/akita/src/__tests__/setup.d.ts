import 'jest-localstorage-mock';
import { EntityStore } from '../lib/entityStore';
import { ActiveState, EntityState, ID } from '../lib/types';
import { QueryEntity } from '../lib/queryEntity';
export declare class Todo {
    id: ID;
    title?: string;
    completed?: boolean;
    price?: number;
    constructor(params: Todo);
}
export interface State extends EntityState<Todo>, ActiveState {
    metadata?: {
        name: string;
    };
}
export declare const initialState: State;
export declare class TodosStore extends EntityStore<State, Todo> {
    constructor(options?: any);
}
export declare type TodoCustomID = {
    todoId: ID;
    title?: string;
    completed?: any;
};
export interface StateTwo extends EntityState<TodoCustomID> {
}
export declare class TodosStoreCustomID extends EntityStore<StateTwo, TodoCustomID> {
    constructor();
}
export declare function createTodos(len: any): any[];
export declare function ct(): () => Todo;
export declare function cot(): Todo;
export declare type Widget = {
    id: ID;
    title: string;
    complete?: boolean;
};
export declare class WidgetsStore extends EntityStore<any, Widget> {
    constructor(initState?: any);
}
export declare class WidgetsQuery extends QueryEntity<any, Widget> {
    protected store: any;
    constructor(store: any);
}
export declare function createWidget(id: any): Widget;
export declare const tick: () => Promise<void>;
